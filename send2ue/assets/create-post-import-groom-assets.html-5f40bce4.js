import{_ as n,r,o as i,c as h,a as t,b as e,d as o,e as a}from"./app-3ee0fe23.js";const d="/BlenderTools/send2ue/assets/0-8d06c251.png",l="/BlenderTools/send2ue/assets/2-68486da2.png",c={},m=a('<h1 id="create-post-import-assets-for-groom" tabindex="-1"><a class="header-anchor" href="#create-post-import-assets-for-groom" aria-hidden="true">#</a> Create Post Import Assets For Groom</h1><p>The <em>Create Post Import Assets For Groom</em> extension provides a convenient way to create additional unreal assets related to the imported groom asset.</p><p><img src="'+d+'" alt="0"></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="groom-binding-asset" tabindex="-1"><a class="header-anchor" href="#groom-binding-asset" aria-hidden="true">#</a> Groom Binding Asset</h3>',5),p=t("em",null,"import mesh",-1),u=t("em",null,"import groom",-1),g={href:"https://epicgames.github.io/BlenderTools/send2ue/settings/import.html",target:"_blank",rel:"noopener noreferrer"},_=t("p",null,[e("The binding asset will use the name of the groom asset and the name of the target skeletal mesh post fixed with "),t("code",null,"_Binding"),e(". Note this is the unreal convention of naming binding assets.")],-1),f=t("p",null,[e("For example, a groom asset sourced from a particle system named "),t("code",null,"hair"),e(" with a surface mesh named "),t("code",null,"SK_Mannequin_Female"),e(" will yield a binding asset named "),t("code",null,"hair_SK_Mannequin_Female_Binding"),e(".")],-1),b={class:"custom-container tip"},w=t("p",{class:"custom-container-title"},"Note",-1),k={href:"https://epicgames.github.io/BlenderTools/send2ue/asset-types/skeletal-mesh.html",target:"_blank",rel:"noopener noreferrer"},x=a('<h3 id="blueprint-asset-with-groom" tabindex="-1"><a class="header-anchor" href="#blueprint-asset-with-groom" aria-hidden="true">#</a> Blueprint Asset with Groom</h3><p>This creates a blueprint asset for each imported skeletal mesh and its surface hairs. The blueprint asset will have one skeletal mesh component and one or more groom components created from the imported mesh and groom assets. The blueprint asset uses the name of the skeletal mesh asset with a postfix <code>_BP</code>.</p><ul><li><p>In the example below, a blueprint asset created with the skeletal mesh <code>SK_Mannequin</code> is named <code>SK_Mannequin_BP</code>. There are multiple hair systems surfaced on the mesh object <code>SK_Mannequin</code>, which results in a groom component created for each groom asset imported.</p><img src="'+l+'" alt="2" width="400"></li></ul><div class="custom-container tip"><p class="custom-container-title">Note</p><p>Each groom component is automatically populated with a groom asset and a binding asset that connects the groom to the skeletal mesh in the skeletal mesh component. For this reason, the <em><strong>binding asset</strong></em> option must be turned on for the <em><strong>blueprint asset with groom binding</strong></em> option to work correctly.</p></div><h2 id="ui" tabindex="-1"><a class="header-anchor" href="#ui" aria-hidden="true">#</a> UI</h2><p>The settings can be found under the <code>Import</code> tab</p>',6);function T(B,v){const s=r("ExternalLinkIcon");return i(),h("div",null,[m,t("p",null,[e("This creates a binding asset for the imported groom asset. The target skeletal mesh is the hair's surface mesh in blender that is part of the same import. For this option to work correctly, the "),p,e(" and "),u,e(" options in the "),t("a",g,[e("import settings"),o(s)]),e(" must be turned on.")]),_,f,t("div",b,[w,t("p",null,[e("A binding asset can only be created when the groom's surface mesh is a "),t("a",k,[e("skeletal mesh"),o(s)]),e(".")])]),x])}const I=n(c,[["render",T],["__file","create-post-import-groom-assets.html.vue"]]);export{I as default};
