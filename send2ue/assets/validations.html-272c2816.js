import{_ as e,o as a,c as t,e as r}from"./app-3ee0fe23.js";const s={},h=r('<h1 id="validations" tabindex="-1"><a class="header-anchor" href="#validations" aria-hidden="true">#</a> Validations</h1><p>Validations are optional checks that can be turned off or configured to check a particular setting before starting the Send to Unreal operation. This way an error message can be thrown to a user that tells them to correct a detail that has been detected as &quot;incorrect&quot;.</p><h3 id="check-scene-scale" tabindex="-1"><a class="header-anchor" href="#check-scene-scale" aria-hidden="true">#</a> Check scene scale</h3><p>This checks that the scene scale is set to 1.</p><h3 id="check-scene-frame-rate" tabindex="-1"><a class="header-anchor" href="#check-scene-frame-rate" aria-hidden="true">#</a> Check scene frame rate</h3><p>This checks the scene time units and ensures they are set to the specified value.</p><h3 id="check-armatures-for-un-applied-transforms" tabindex="-1"><a class="header-anchor" href="#check-armatures-for-un-applied-transforms" aria-hidden="true">#</a> Check armatures for un-applied transforms</h3><p>If an armature object has un-applied transforms (meaning location and rotation are not [0,0,0] and scale is not [1,1,1]) a message is thrown to the user.</p><h3 id="check-if-asset-has-unused-materials" tabindex="-1"><a class="header-anchor" href="#check-if-asset-has-unused-materials" aria-hidden="true">#</a> Check if asset has unused materials</h3><p>If this option is on it looks at each material index on the object and it checks if that material is assigned to a vertex on the mesh object. If there is a unused material, then an error message is thrown to the user.</p><h3 id="check-texture-references" tabindex="-1"><a class="header-anchor" href="#check-texture-references" aria-hidden="true">#</a> Check texture references</h3><p>This checks the texture references and sees if they actually exist on disk.</p><h3 id="check-paths" tabindex="-1"><a class="header-anchor" href="#check-paths" aria-hidden="true">#</a> Check paths</h3><p>This checks the export and import paths and makes sure they are valid before preforming the operation.</p><h3 id="check-project-settings" tabindex="-1"><a class="header-anchor" href="#check-project-settings" aria-hidden="true">#</a> Check project settings</h3><p>This checks whether the required unreal project settings are in place before performing the operation.</p><h3 id="check-blender-object-names" tabindex="-1"><a class="header-anchor" href="#check-blender-object-names" aria-hidden="true">#</a> Check blender object names</h3><p>This checks whether the blender object names in the Export collection contain any invalid special characters or white space. While the following special characters <code>&#39;&quot;.,/.:|&amp;!~\\n\\r\\t@#(){}[]=;^%$\\`*?&lt;&gt;</code> have valid usage in Blender, they are not valid to use in asset names in Unreal.</p><p>Send2UE automatically converts any invalid characters to <code>_</code> during the export process if this validation is turned off.</p><h3 id="check-meshes-for-vertex-groups" tabindex="-1"><a class="header-anchor" href="#check-meshes-for-vertex-groups" aria-hidden="true">#</a> Check meshes for vertex groups</h3><p>This checks that a mesh with an armature modifier has vertex groups.</p>',21),c=[h];function n(i,o){return a(),t("div",null,c)}const l=e(s,[["render",n],["__file","validations.html.vue"]]);export{l as default};
