import{_ as e,o as a,c as r,e as t}from"./app-bd3ccd46.js";const i="/BlenderTools/ue2rigify/assets/1-c3fe6387.jpg",o="/BlenderTools/ue2rigify/assets/2-de84086d.jpg",s="/BlenderTools/ue2rigify/assets/3-112e825a.jpg",n="/BlenderTools/ue2rigify/assets/4-ac8ce969.png",h={},d=t('<h1 id="ue-to-rigify-panel" tabindex="-1"><a class="header-anchor" href="#ue-to-rigify-panel" aria-hidden="true">#</a> UE to Rigify Panel</h1><p>This section defines all the properties and operators depicted below in the ‘UE to Rigify’ panel in the 3D viewport.</p><p><img src="'+i+'" alt="1"><img src="'+o+'" alt="2"><img src="'+s+'" alt="3"><img src="'+n+'" alt="4"></p><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h3><p>This object picker specifies which object is the ‘Source’ rig.</p><h3 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> Template</h3><p>This dropdown allows you to select a template or create a new one. New templates are stored within:</p><ul><li>windows: <code>%TEMP%\\ue2rigify\\resources\\rig_templates</code></li><li>unix: <code>/tmp/ue2rigify/resources/rig_templates</code></li></ul><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> Mode</h3><p>This dropdown allows you to select which mode you want to edit your rig template in. The ‘UE to Rigify’ modes are: ‘Source’, ‘Edit Metarig’, ‘FK to Source’, ‘Source to Deform’, and ‘Control’.</p><h3 id="overwrite-animation" tabindex="-1"><a class="header-anchor" href="#overwrite-animation" aria-hidden="true">#</a> Overwrite Animation</h3><p>If enabled, your control rig animation data will be overwritten by the animation data from your source rig.</p><h3 id="metarig" tabindex="-1"><a class="header-anchor" href="#metarig" aria-hidden="true">#</a> Metarig</h3><p>This dropdown gives you some metarig presets that you can use as starting points when creating your new metarig template.</p><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> Name</h3><p>This property defines the name of your new rig template.</p><h3 id="save-metarig" tabindex="-1"><a class="header-anchor" href="#save-metarig" aria-hidden="true">#</a> Save Metarig</h3><p>This operator saves the state of your current metarig into the rig template file, and switches the mode back to ‘Source’ mode.</p><h3 id="save-nodes" tabindex="-1"><a class="header-anchor" href="#save-nodes" aria-hidden="true">#</a> Save Nodes</h3><p>This operator saves the state of your current node tree into the rig template file, and switches the mode back to ‘Source’ mode.</p><h3 id="convert" tabindex="-1"><a class="header-anchor" href="#convert" aria-hidden="true">#</a> Convert</h3><p>This operator switches the current mode to ‘Control’ mode, builds the Rigify rig, and constrains the ‘Source’ rig bones to it.</p><h3 id="revert" tabindex="-1"><a class="header-anchor" href="#revert" aria-hidden="true">#</a> Revert</h3><p>This operator switches the current mode to ‘Source’ mode, and restores the view to just the ‘Source’ rig.</p><h3 id="bake" tabindex="-1"><a class="header-anchor" href="#bake" aria-hidden="true">#</a> Bake</h3><p>This operator bakes the ‘Control’ rig actions to the ‘Source’ rig actions.</p><h3 id="bake-every-bone" tabindex="-1"><a class="header-anchor" href="#bake-every-bone" aria-hidden="true">#</a> Bake every bone</h3><p>If enabled, this will bake every bone on the source rig. If not enabled, it will only bake the source rig bones that are linked to the control rig&#39;s FK bones in the FK to Source template.</p>',28),c=[d];function l(p,u){return a(),r("div",null,c)}const g=e(h,[["render",l],["__file","3d-view-panel.html.vue"]]);export{g as default};
